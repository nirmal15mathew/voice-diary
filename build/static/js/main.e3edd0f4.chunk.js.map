{"version":3,"sources":["assets/microphone.svg","assets/more_vertical.svg","assets/list_icon.svg","Components/ThemeHandler.js","Components/AppHeader.js","Components/useRecorder.js","Components/Snackbar/SnackBar.js","assets/pause_icon.svg","assets/record_icon.svg","assets/stop_square.svg","Components/RecorderControl/RecorderControlBoard.js","Components/RecorderMain.js","assets/arrow_back.svg","Components/RecordingsList.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeHandler","children","useState","theme","setTheme","value","switchTheme","Provider","AppHeader","setPage","navActive","menu","setMenu","useContext","className","src","Microphone","alt","onClick","ListIcon","onFocus","onBlur","MoreIcon","hidden","console","log","a","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","useRecorder","audioURL","setAudioURL","isRecording","setIsRecording","recorder","setRecorder","useEffect","start","stop","handleData","e","URL","createObjectURL","data","addEventListener","removeEventListener","requestRecorder","then","error","SnackBar","statusContent","buttonTitle","buttonClickEvent","isVisible","role","aria-relevant","aria-atomic","type","RecordControlBoard","handlePauseButton","handleRecord","name","StopSquare","RecordIcon","PauseIcon","RecorderMain","setRecorderState","startRecording","stopRecording","snackBarActive","setSnackbar","controls","timeout","timer","setTimeout","toggleSnackbar","RecordingsList","recordings","ArrowBack","map","item","i","title","App","listActive","setList","recorderActive","style","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3edd0f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/microphone.eca7ce30.svg\";","export default __webpack_public_path__ + \"static/media/more_vertical.f2acbf2e.svg\";","export default __webpack_public_path__ + \"static/media/list_icon.97ebc772.svg\";","import {createContext, useState} from \"react\"\r\nconst ThemeContext = createContext();\r\n\r\nfunction ThemeHandler({children}) {\r\n    const [theme, setTheme] = useState('light');\r\n    const switchTheme = (theme) => setTheme(theme);\r\n    const value = {\r\n        theme,\r\n        switchTheme\r\n    }\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\nexport default ThemeHandler;\r\nexport {\r\n    ThemeContext\r\n}","import React,{useState,useContext} from \"react\";\r\nimport Microphone from \"../assets/microphone.svg\";\r\nimport MoreIcon from \"../assets/more_vertical.svg\";\r\nimport ListIcon from \"../assets/list_icon.svg\";\r\nimport {ThemeContext} from \"./ThemeHandler\";\r\n\r\nfunction AppHeader({setPage, navActive}) {\r\n  const [menu, setMenu] = useState(false);\r\n  const {theme, switchTheme} = useContext(ThemeContext);\r\n  function handleThemeChange() {\r\n    console.log(theme)\r\n    if (theme === \"light\") {\r\n      switchTheme(\"dark\")\r\n    } else {\r\n      switchTheme('light');\r\n    }\r\n  }\r\n  return (\r\n    <header className=\"App-Header\">\r\n      {/* Header Components */}\r\n      <picture className=\"App-Logo\">\r\n        <img src={Microphone} className=\"App-Logo-img\" alt=\"\"></img>\r\n        <h1 className=\"App-Name\">Diary</h1>\r\n      </picture>\r\n      <nav className={!navActive ? \"App-Nav is-disabled\" : \"App-Nav\"}>\r\n        <button className=\"Nav-Button\" onClick={setPage}>\r\n          <img src={ListIcon} className=\"icon\" alt=\"\"></img>\r\n        </button>\r\n        <button className=\"Nav-Button\" onFocus={() => setMenu(true)} onBlur={() => setMenu(false)}>\r\n          <img src={MoreIcon} className=\"icon\" alt=\"\"></img>\r\n        </button>\r\n        <menu hidden={!menu} className=\"Header-Menu\">\r\n          <ul className=\"Menu-list\">\r\n            <li className=\"Menu-Item\" onClick={() => console.log(\"Hello World\")}>\r\n              {theme === \"dark\" ? \"Light\" : \"Night\"} Mode\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              Settings\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              About\r\n            </li>\r\n          </ul>\r\n        </menu>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\nexport default AppHeader;","import { useEffect, useState } from \"react\";\r\n\r\nconst useRecorder = () => {\r\n  const [audioURL, setAudioURL] = useState(\"\");\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recorder, setRecorder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Lazily obtain recorder first time we're recording.\r\n    if (recorder === null) {\r\n      if (isRecording) {\r\n        requestRecorder().then(setRecorder, console.error);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Manage recorder state.\r\n    if (isRecording) {\r\n      recorder.start();\r\n    } else {\r\n      recorder.stop();\r\n    }\r\n\r\n    // Obtain the audio when ready.\r\n    const handleData = e => {\r\n      setAudioURL(URL.createObjectURL(e.data));\r\n    };\r\n\r\n    recorder.addEventListener(\"dataavailable\", handleData);\r\n    // removing it to prevent memory leaks when not in use\r\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\r\n  }, [recorder, isRecording]);\r\n\r\n  const startRecording = () => {\r\n    setIsRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n\r\n  return [audioURL, isRecording, startRecording, stopRecording];\r\n};\r\n\r\nasync function requestRecorder() {\r\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n  return new MediaRecorder(stream);\r\n}\r\nexport default useRecorder;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SnackBar({ statusContent, buttonTitle, buttonClickEvent, isVisible }) {\r\n  return (\r\n    <div className={isVisible ? \"Snackbar is-visible\" : \"Snackbar\"}>\r\n      <div className=\"Snackbar-Surface\" role=\"status\" aria-relevant=\"additions\">\r\n        <div className=\"Snackbar-Label\" aria-atomic=\"false\">\r\n          {statusContent}\r\n        </div>\r\n        {buttonTitle && (\r\n          <div className=\"Snackbar-Actions\" aria-atomic=\"true\">\r\n            <button type=\"button\" className=\"Snackbar-Action-Button\">\r\n              <div className=\"Snackbar-Ripple\"></div>\r\n              <span\r\n                className=\"Snackbar-Button-Label\"\r\n                onClick={buttonClickEvent}\r\n              >\r\n                {buttonTitle}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SnackBar;\r\n","export default __webpack_public_path__ + \"static/media/pause_icon.b87cfe89.svg\";","export default __webpack_public_path__ + \"static/media/record_icon.a20dcd57.svg\";","export default __webpack_public_path__ + \"static/media/stop_square.81431bae.svg\";","import React from \"react\";\r\nimport PauseIcon from \"../../assets/pause_icon.svg\";\r\nimport RecordIcon from \"../../assets/record_icon.svg\";\r\nimport StopSquare from \"../../assets/stop_square.svg\";\r\n\r\nfunction RecordControlBoard({isRecording, handlePauseButton, handleRecord}) {\r\n    return (\r\n        <footer className=\"Recorder-Footer\">\r\n        <button\r\n          className={isRecording ? \"Record-Button is-active\" : \"Record-Button\"}\r\n          onClick={handleRecord}\r\n          name=\"Record Button\"\r\n        >\r\n          <img src={isRecording ? StopSquare : RecordIcon} alt=\"\"></img>\r\n        </button>\r\n        {isRecording && (\r\n          <button\r\n            className=\"Record-Button is-active\"\r\n            name=\"Pause Button\"\r\n            onClick={handlePauseButton}\r\n          >\r\n            <img src={PauseIcon} alt=\"\"></img>\r\n          </button>\r\n        )}\r\n      </footer>\r\n    )\r\n}\r\nexport default RecordControlBoard;","import React,{useState,useEffect} from \"react\";\r\n//import PlayArrow from \"../assets/play_arrow.svg\";\r\nimport useRecorder from \"./useRecorder\";\r\nimport Snackbar from \"./Snackbar/SnackBar\";\r\nimport RecordControlBoard from \"./RecorderControl/RecorderControlBoard\";\r\n\r\nfunction RecorderMain({setRecorderState}) {\r\n  const [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\r\n  const [snackBarActive, setSnackbar] = useState(false);\r\n  useEffect(() => {\r\n    setRecorderState(isRecording)\r\n  }, [isRecording, setRecorderState])\r\n  function handleRecord() {\r\n    if (isRecording) {\r\n      stopRecording();\r\n      toggleSnackbar(3000)\r\n      console.log(\"Recording Stopped...\");\r\n      console.log(\"Saving\");\r\n    } else {\r\n      startRecording();\r\n      console.log(\"Recording started\");\r\n    }\r\n  }\r\n  function handlePauseButton() {}\r\n  function toggleSnackbar(timeout) {\r\n    setSnackbar(true);\r\n    let timer = setTimeout(() => setSnackbar(false), timeout);\r\n    return () => clearTimeout(timer)\r\n  }\r\n  return (\r\n    <main className=\"Recorder-Main\">\r\n      {/* Main Recorder */}\r\n      <section className=\"Recorder-Viewport\">\r\n        <audio src={audioURL} controls hidden></audio>\r\n        <Snackbar\r\n          statusContent=\"New Audio Saved successfully\"\r\n          buttonTitle=\"Dismiss\"\r\n          buttonClickEvent={() => setSnackbar(false)}\r\n          isVisible={snackBarActive}\r\n        ></Snackbar>\r\n      </section>\r\n      <RecordControlBoard\r\n        handlePauseButton={handlePauseButton}\r\n        handleRecord={handleRecord}\r\n        isRecording={isRecording}\r\n      ></RecordControlBoard>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default RecorderMain;\r\n","export default __webpack_public_path__ + \"static/media/arrow_back.d4d4c518.svg\";","import React from \"react\";\r\nimport ArrowBack from \"../assets/arrow_back.svg\";\r\n\r\nfunction RecordingsList({ setPage, recordings }) {\r\n  return (\r\n    <main className=\"Recordings-List-Main\">\r\n      <header className=\"Recording-List-Header\">\r\n        <button onClick={setPage} className=\"Back-Button\">\r\n          <img src={ArrowBack} className=\"icon\" alt=\"\"></img>\r\n        </button>\r\n      </header>\r\n      <section className=\"Recordings-List-Section\">\r\n        <ul className=\"Recordings-List\">\r\n          {recordings &&\r\n            recordings.map((item, i) => (\r\n              <li className=\"Recorded-Diary\" key={i}>\r\n                {item.title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default RecordingsList;\r\n","import \"./App.css\";\nimport AppHeader from \"./Components/AppHeader\";\nimport RecorderMain from \"./Components/RecorderMain\";\nimport RecordingsList from \"./Components/RecordingsList\";\nimport {ThemeContext} from \"./Components/ThemeHandler\";\nimport { useState, useContext } from \"react\";\n\nfunction App() {\n  const [listActive, setList] = useState(false);\n  const [recorderActive, setRecorderState] = useState(false);\n  const {theme} = useContext(ThemeContext)\n  const dark = {\n    '--background-color': 'var(--gunmetal)',\n    '--text-color': 'var(--isabelline)'\n  }\n  const light = {\n    '--background-color': 'var(--isabelline)',\n    '--text-color': 'var(--gunmetal)'\n  }\n  return (\n    <div className=\"App\" style={theme === \"dark\" ? dark : light}>\n      {listActive ? (\n        <RecordingsList setPage={_ => setList(false)}></RecordingsList>\n      ) : (\n        <>\n          <AppHeader setPage={_ => setList(true)} navActive={!recorderActive}/>\n          <RecorderMain setRecorderState={setRecorderState}/>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ThemeHandler from \"./Components/ThemeHandler\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeHandler>\n      <App />\n    </ThemeHandler>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}