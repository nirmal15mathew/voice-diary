{"version":3,"sources":["assets/microphone.svg","assets/more_vertical.svg","assets/list_icon.svg","Components/AppHeader.js","assets/record_icon.svg","assets/stop_square.svg","assets/pause_icon.svg","Components/useRecorder.js","Components/RecorderMain.js","assets/arrow_back.svg","Components/RecordingsList.js","App.js","index.js"],"names":["AppHeader","setPage","useState","menu","setMenu","className","src","Microphone","alt","onClick","ListIcon","onFocus","onBlur","MoreIcon","hidden","a","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","useRecorder","audioURL","setAudioURL","isRecording","setIsRecording","recorder","setRecorder","useEffect","start","stop","handleData","e","URL","createObjectURL","data","addEventListener","removeEventListener","requestRecorder","then","console","error","RecorderMain","startRecording","stopRecording","controls","log","name","StopSquare","RecordIcon","PauseIcon","RecordingsList","recordings","ArrowBack","map","item","i","title","App","listActive","setList","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff1564f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/microphone.eca7ce30.svg\";","export default __webpack_public_path__ + \"static/media/more_vertical.f2acbf2e.svg\";","export default __webpack_public_path__ + \"static/media/list_icon.97ebc772.svg\";","import React,{useState} from \"react\";\r\nimport Microphone from \"../assets/microphone.svg\";\r\nimport MoreIcon from \"../assets/more_vertical.svg\";\r\nimport ListIcon from \"../assets/list_icon.svg\";\r\n\r\nfunction AppHeader({setPage}) {\r\n  const [menu, setMenu] = useState(false);\r\n  return (\r\n    <header className=\"App-Header\">\r\n      {/* Header Components */}\r\n      <picture className=\"App-Logo\">\r\n        <img src={Microphone} className=\"App-Logo-img\" alt=\"\"></img>\r\n        <h1 className=\"App-Name\">Diary</h1>\r\n      </picture>\r\n      <nav className=\"App-Nav\">\r\n        <button className=\"Nav-Button\" onClick={setPage}>\r\n          <img src={ListIcon} className=\"icon\" alt=\"\"></img>\r\n        </button>\r\n        <button className=\"Nav-Button\" onFocus={() => setMenu(true)} onBlur={() => setMenu(false)}>\r\n          <img src={MoreIcon} className=\"icon\" alt=\"\"></img>\r\n        </button>\r\n        <menu hidden={!menu} className=\"Header-Menu\">\r\n          <ul className=\"Menu-list\">\r\n            <li className=\"Menu-Item\">\r\n              Night Mode\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              Settings\r\n            </li>\r\n            <li className=\"Menu-Item\">\r\n              About\r\n            </li>\r\n          </ul>\r\n        </menu>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/record_icon.a20dcd57.svg\";","export default __webpack_public_path__ + \"static/media/stop_square.81431bae.svg\";","export default __webpack_public_path__ + \"static/media/pause_icon.b87cfe89.svg\";","import { useEffect, useState } from \"react\";\r\n\r\nconst useRecorder = () => {\r\n  const [audioURL, setAudioURL] = useState(\"\");\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recorder, setRecorder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Lazily obtain recorder first time we're recording.\r\n    if (recorder === null) {\r\n      if (isRecording) {\r\n        requestRecorder().then(setRecorder, console.error);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Manage recorder state.\r\n    if (isRecording) {\r\n      recorder.start();\r\n    } else {\r\n      recorder.stop();\r\n    }\r\n\r\n    // Obtain the audio when ready.\r\n    const handleData = e => {\r\n      setAudioURL(URL.createObjectURL(e.data));\r\n    };\r\n\r\n    recorder.addEventListener(\"dataavailable\", handleData);\r\n    // removing it to prevent memory leaks when not in use\r\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\r\n  }, [recorder, isRecording]);\r\n\r\n  const startRecording = () => {\r\n    setIsRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n\r\n  return [audioURL, isRecording, startRecording, stopRecording];\r\n};\r\n\r\nasync function requestRecorder() {\r\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n  return new MediaRecorder(stream);\r\n}\r\nexport default useRecorder;\r\n","import React from \"react\";\r\nimport RecordIcon from \"../assets/record_icon.svg\";\r\nimport StopSquare from \"../assets/stop_square.svg\";\r\n//import PlayArrow from \"../assets/play_arrow.svg\";\r\nimport PauseIcon from \"../assets/pause_icon.svg\";\r\nimport useRecorder from \"./useRecorder\";\r\n\r\nfunction RecorderMain() {\r\n  const [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\r\n  function handleClick() {\r\n    if (isRecording) {\r\n      stopRecording();\r\n      console.log(\"Recording Stopped...\")\r\n      console.log(\"Saving\")\r\n    } else {\r\n      startRecording();\r\n      console.log(\"Recording started\")\r\n    }\r\n  }\r\n  function handlePauseButton() {\r\n\r\n  }\r\n  return (\r\n    <main className=\"Recorder-Main\">\r\n      {/* Main Recorder */}\r\n      <section className=\"Recorder-Viewport\">\r\n        <audio src={audioURL} controls hidden></audio>\r\n      </section>\r\n      <footer className=\"Recorder-Footer\">\r\n        <button\r\n          className={isRecording ? \"Record-Button is-active\" : \"Record-Button\"}\r\n          onClick={handleClick}\r\n          name=\"Record Button\"\r\n        >\r\n          <img src={isRecording ? StopSquare : RecordIcon} alt=\"\"></img>\r\n        </button>\r\n        {isRecording && (\r\n          <button className=\"Record-Button is-active\" name=\"Pause Button\" onClick={handlePauseButton}>\r\n            <img src={PauseIcon} alt=\"\"></img>\r\n          </button>\r\n        )}\r\n      </footer>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default RecorderMain;\r\n","export default __webpack_public_path__ + \"static/media/arrow_back.d4d4c518.svg\";","import React from \"react\";\r\nimport ArrowBack from \"../assets/arrow_back.svg\";\r\n\r\nfunction RecordingsList({ setPage, recordings }) {\r\n  return (\r\n    <main className=\"Recordings-List-Main\">\r\n      <header className=\"Recording-List-Header\">\r\n        <button onClick={setPage} className=\"Back-Button\">\r\n          <img src={ArrowBack} className=\"icon\" alt=\"\"></img>\r\n        </button>\r\n      </header>\r\n      <section className=\"Recordings-List-Section\">\r\n        <ul className=\"Recordings-List\">\r\n          {recordings &&\r\n            recordings.map((item, i) => (\r\n              <li className=\"Recorded-Diary\" key={i}>\r\n                {item.title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default RecordingsList;\r\n","import \"./App.css\";\nimport AppHeader from \"./Components/AppHeader\";\nimport RecorderMain from \"./Components/RecorderMain\";\nimport RecordingsList from \"./Components/RecordingsList\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [listActive, setList] = useState(false);\n  return (\n    <div className=\"App\">\n      {listActive ? (\n        <RecordingsList setPage={_ => setList(false)}></RecordingsList>\n      ) : (\n        <>\n          <AppHeader setPage={_ => setList(true)}/>\n          <RecorderMain />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}